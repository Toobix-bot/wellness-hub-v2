# WELLNESS HUB - NOTFALL GIT RESET
# Dieses Skript l√∂st das Git-Merge Problem vollst√§ndig

$ErrorActionPreference = "SilentlyContinue"
$projectPath = "c:\Users\micha\NEU\NEU_V1\Fourcen"

Write-Host "üö® NOTFALL GIT RESET f√ºr Wellness Hub Framework" -ForegroundColor Red
Write-Host "=" * 60 -ForegroundColor Yellow

# Wechsle ins Projektverzeichnis
Set-Location $projectPath

# 1. Alle Git-Prozesse brutal beenden
Write-Host "1Ô∏è‚É£ Beende alle Git-Prozesse..." -ForegroundColor Yellow
Get-Process | Where-Object {$_.ProcessName -like "*git*" -or $_.ProcessName -like "*vim*" -or $_.ProcessName -like "*nano*"} | Stop-Process -Force
Start-Sleep -Seconds 3

# 2. Git-Merge abbrechen (falls m√∂glich)
Write-Host "2Ô∏è‚É£ Versuche Git-Merge abzubrechen..." -ForegroundColor Yellow
git merge --abort 2>$null
git reset --hard HEAD 2>$null

# 3. .git Verzeichnis komplett entfernen
Write-Host "3Ô∏è‚É£ Entferne .git Verzeichnis..." -ForegroundColor Yellow
if (Test-Path ".git") {
    # Alle Attribute zur√ºcksetzen
    Get-ChildItem ".git" -Recurse -Force | ForEach-Object { 
        $_.Attributes = 'Normal' 
    }
    
    # Mehrere Methoden probieren
    try {
        Remove-Item ".git" -Recurse -Force
        Write-Host "‚úÖ .git mit PowerShell entfernt" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è PowerShell Methode fehlgeschlagen, versuche CMD..." -ForegroundColor Orange
        cmd /c "rmdir /s /q .git"
        
        if (-not (Test-Path ".git")) {
            Write-Host "‚úÖ .git mit CMD entfernt" -ForegroundColor Green
        } else {
            Write-Host "‚ùå .git konnte nicht entfernt werden" -ForegroundColor Red
            Write-Host "Manueller Eingriff erforderlich!" -ForegroundColor Red
            exit 1
        }
    }
} else {
    Write-Host "‚úÖ .git Verzeichnis bereits entfernt" -ForegroundColor Green
}

# 4. Neues Git-Repository erstellen
Write-Host "4Ô∏è‚É£ Erstelle neues Git-Repository..." -ForegroundColor Yellow
git init
git config user.name "Toobix-bot"
git config user.email "toobix@example.com"
Write-Host "‚úÖ Neues Repository initialisiert" -ForegroundColor Green

# 5. Alle Dateien hinzuf√ºgen
Write-Host "5Ô∏è‚É£ F√ºge alle Dateien hinzu..." -ForegroundColor Yellow
git add .
Write-Host "‚úÖ Dateien hinzugef√ºgt" -ForegroundColor Green

# 6. Initial Commit
Write-Host "6Ô∏è‚É£ Erstelle Initial Commit..." -ForegroundColor Yellow
git commit -m "üö® NOTFALL RESET - Wellness Hub Framework

üéØ Frischer Start nach Git-Merge Konflikt
‚ú® 38+ Wellness Module bereit f√ºr Deployment
üöÄ Optimiert f√ºr Vercel Deployment
üì± Responsive Design & Dark Mode
üîí GDPR-konform & rechtssicher"

Write-Host "‚úÖ Initial Commit erstellt" -ForegroundColor Green

# 7. Status pr√ºfen
Write-Host "7Ô∏è‚É£ Git Status:" -ForegroundColor Yellow
git status --porcelain

Write-Host "`nüéâ NOTFALL RESET ERFOLGREICH!" -ForegroundColor Green
Write-Host "=" * 60 -ForegroundColor Green
Write-Host "‚úÖ Git-Repository ist sauber" -ForegroundColor Green
Write-Host "‚úÖ Alle Dateien committed" -ForegroundColor Green
Write-Host "üöÄ Bereit f√ºr GitHub Push!" -ForegroundColor Green

Write-Host "`nüìã N√ÑCHSTE SCHRITTE:" -ForegroundColor Cyan
Write-Host "1. Neues GitHub Repository erstellen" -ForegroundColor White
Write-Host "2. git remote add origin https://github.com/Toobix-bot/wellness-hub-v2.git" -ForegroundColor White
Write-Host "3. git push -u origin main" -ForegroundColor White
Write-Host "4. Vercel Deployment" -ForegroundColor White

Write-Host "`nDr√ºcke eine Taste zum Beenden..." -ForegroundColor Gray
Read-Host
