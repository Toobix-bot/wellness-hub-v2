# Frischer GitHub Start - Vollst√§ndige Repository-Neuinitialisierung
Write-Host "üöÄ FRISCHER GITHUB START f√ºr Wellness Hub Framework" -ForegroundColor Green
Write-Host "=" * 60 -ForegroundColor Cyan

# Schritt 1: Alle Git-Prozesse beenden
Write-Host "`n1Ô∏è‚É£ Beende alle Git-Prozesse..." -ForegroundColor Yellow
Get-Process git -ErrorAction SilentlyContinue | Stop-Process -Force -ErrorAction SilentlyContinue
Start-Sleep -Seconds 2

# Schritt 2: .git Verzeichnis l√∂schen (mehrere Versuche)
Write-Host "2Ô∏è‚É£ L√∂sche altes Git-Repository..." -ForegroundColor Yellow
$gitPath = ".git"
if (Test-Path $gitPath) {
    try {
        # Erst alle Dateien unlocked machen
        Get-ChildItem $gitPath -Recurse -Force | ForEach-Object { $_.Attributes = 'Normal' }
        Remove-Item $gitPath -Recurse -Force -ErrorAction Stop
        Write-Host "‚úÖ .git Verzeichnis erfolgreich gel√∂scht" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ö†Ô∏è Fehler beim L√∂schen: $($_.Exception.Message)" -ForegroundColor Red
        # Alternative Methode
        cmd /c "rmdir /s /q .git" 2>$null
        if (-not (Test-Path $gitPath)) {
            Write-Host "‚úÖ .git Verzeichnis mit CMD erfolgreich gel√∂scht" -ForegroundColor Green
        }
    }
} else {
    Write-Host "‚úÖ Kein .git Verzeichnis gefunden" -ForegroundColor Green
}

# Schritt 3: Neues Git-Repository initialisieren
Write-Host "3Ô∏è‚É£ Initialisiere neues Git-Repository..." -ForegroundColor Yellow
git init
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Git-Repository erfolgreich initialisiert" -ForegroundColor Green
} else {
    Write-Host "‚ùå Fehler bei Git-Initialisierung" -ForegroundColor Red
    exit 1
}

# Schritt 4: Git-Konfiguration
Write-Host "4Ô∏è‚É£ Konfiguriere Git..." -ForegroundColor Yellow
git config user.name "Toobix-bot"
git config user.email "your-email@example.com"
Write-Host "‚úÖ Git-Benutzer konfiguriert" -ForegroundColor Green

# Schritt 5: .gitignore pr√ºfen
Write-Host "5Ô∏è‚É£ Pr√ºfe .gitignore..." -ForegroundColor Yellow
if (Test-Path ".gitignore") {
    Write-Host "‚úÖ .gitignore bereits vorhanden" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è .gitignore nicht gefunden - erstelle Standard-.gitignore" -ForegroundColor Orange
    # Standard Next.js .gitignore erstellen falls n√∂tig
}

# Schritt 6: Alle Dateien hinzuf√ºgen
Write-Host "6Ô∏è‚É£ F√ºge alle Dateien zum Repository hinzu..." -ForegroundColor Yellow
git add .
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Alle Dateien erfolgreich hinzugef√ºgt" -ForegroundColor Green
} else {
    Write-Host "‚ùå Fehler beim Hinzuf√ºgen der Dateien" -ForegroundColor Red
    exit 1
}

# Schritt 7: Initial Commit
Write-Host "7Ô∏è‚É£ Erstelle initialen Commit..." -ForegroundColor Yellow
git commit -m "üéâ Initial commit - Wellness Hub Framework mit 38+ Modulen

‚ú® Features:
- 7 Hauptkategorien mit 38+ Wellness-Modulen
- Next.js 14 mit App Router
- TypeScript & Tailwind CSS
- Responsive Design & Dark Mode
- Framer Motion Animationen
- GDPR-konform & rechtssicher

üöÄ Bereit f√ºr Vercel Deployment!"

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Initial Commit erfolgreich erstellt" -ForegroundColor Green
} else {
    Write-Host "‚ùå Fehler beim Initial Commit" -ForegroundColor Red
    exit 1
}

# Schritt 8: Status anzeigen
Write-Host "8Ô∏è‚É£ Git Status:" -ForegroundColor Yellow
git status --short

Write-Host "`nüéâ FRISCHER START ABGESCHLOSSEN!" -ForegroundColor Green
Write-Host "=" * 60 -ForegroundColor Cyan
Write-Host "‚úÖ Neues Git-Repository ist bereit" -ForegroundColor Green
Write-Host "‚úÖ Alle Dateien committed" -ForegroundColor Green
Write-Host "üöÄ Bereit f√ºr GitHub Push!" -ForegroundColor Green
Write-Host "`nN√§chster Schritt: Neues GitHub Repository erstellen und pushen" -ForegroundColor Cyan
